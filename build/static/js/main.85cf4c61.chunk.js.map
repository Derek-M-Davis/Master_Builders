{"version":3,"sources":["components/Build.js","components/Form.js","components/Main.js","components/Aside.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Build","className","this","props","buildData","id","cpu","cpucooler","motherboard","memory","storage","videocard","compcase","powersupply","os","fan","monitor","keyboard","mouse","onClick","handleView","handleDelete","React","Component","Form","handleChange","e","setState","target","value","handleSubmit","preventDefault","view","page","handleCreate","state","handleUpdate","formInputs","onSubmit","type","placeholder","onChange","baseUrl","Main","fetchBuilds","fetch","then","data","json","jData","builds","catch","err","console","log","createData","body","JSON","stringify","method","headers","createdBuild","jsonedBuild","prevState","updateData","updatedBuild","filter","build","pageTitle","map","key","Aside","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85cf4c61.chunk.js","sourcesContent":["import React from 'react'\n\nclass Build extends React.Component {\n    render (){\n        return (\n            <article>\n                 <div className=\"build-header\">\n                <h1>{this.props.buildData.id}</h1>\n                </div>\n                <div className=\"build-body\">\n                CPU: {this.props.buildData.cpu}\n                <br />\n                CPU Cooler: {this.props.buildData.cpucooler}\n                <br />\n                Motherboard: {this.props.buildData.motherboard}\n                <br />\n                Memory: {this.props.buildData.memory}\n                <br />\n                Storage: {this.props.buildData.storage}\n                <br />\n                Video Card: {this.props.buildData.videocard}\n                <br />\n                Case: {this.props.buildData.compcase}\n                <br />\n                Power Supply: {this.props.buildData.powersupply}\n                <br />\n                OS: {this.props.buildData.os}\n                <br />\n                Fan: {this.props.buildData.fan}\n                <br />\n                Monitor: {this.props.buildData.monitor}\n                <br />\n                Keyboard: {this.props.buildData.keyboard}\n                <br />\n                Mouse: {this.props.buildData.mouse}\n                </div>\n                <div className=\"build-options\">\n                    <ul>\n                        <li onClick={() => {this.props.handleView('editBuild', this.props.buildData)}}>Edit Build</li>\n\n                        <li onClick={() => {this.props.handleDelete(this.props.buildData.id)}}>Delete Build</li>\n                    </ul>\n                </div>\n            </article>\n        )\n    }\n}\n\nexport default Build\n","import React from 'react'\n\nclass Form extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            cpu: '',\n            cpucooler: '',\n            motherboard: '',\n            memory: '',\n            storage: '',\n            videocard: '',\n            compcase: '',\n            powersupply: '',\n            os: '',\n            fan: '',\n            monitor: '',\n            keyboard: '',\n            mouse: '',\n            id: null\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        if(this.props.view.page === 'addBuild') {\n            this.props.handleCreate(this.state)\n        } else if(this.props.view.page === 'editBuild'){\n            this.props.handleUpdate(this.state)\n        }\n    }\n\n    componentDidMount(){\n        this.setState({\n            cpu: this.props.formInputs.cpu,\n            cpucooler: this.props.formInputs.cpucooler,\n            motherboard: this.props.formInputs.motherboard,\n            memory: this.props.formInputs.memory,\n            storage: this.props.formInputs.storage,\n            videocard: this.props.formInputs.videocard,\n            compcase: this.props.formInputs.compcase,\n            powersupply: this.props.formInputs.powersupply,\n            os: this.props.formInputs.os,\n            fan: this.props.formInputs.fan,\n            monitor: this.props.formInputs.monitor,\n            keyboard: this.props.formInputs.keyboard,\n            mouse: this.props.formInputs.mouse,\n            id: this.props.formInputs.id\n        })\n    }\n\n  render () {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          CPU\n          <input type=\"text\" placeholder=\"Intel/AMD\" id=\"cpu\" value={this.state.cpu} onChange={this.handleChange}/>\n        </label>\n        <label>\n          CPU Cooler\n          <input type=\"text\" placeholder=\"Air Cooler/Liquid Cooler\" id=\"cpucooler\" value={this.state.cpucooler} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Motherboard\n          <input type=\"text\" placeholder=\"Intel B/H/Z Series or AMD B/X Series \" id=\"motherboard\" value={this.state.motherboard} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Memory\n          <input type=\"text\" placeholder=\"Memory Capacity/Speed/CAS Latency\" id=\"memory\" value={this.state.memory} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Storage\n          <input type=\"text\" placeholder=\"Capacity and M.2/2.5in/3.5in Form Factor\" id=\"storage\" value={this.state.storage} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Video Card\n          <input type=\"text\" placeholder=\"Geforce-GTX/RTX or Radeon-RX Series \" id=\"videocard\" value={this.state.videocard} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Case\n          <input type=\"text\" placeholder=\"ATX/EATX/Micro ATX/Mini ITX\" id=\"compcase\" value={this.state.compcase} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Power Supply\n          <input type=\"text\" placeholder=\"Wattage and Rating\" id=\"powersupply\" value={this.state.powersupply} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Operating System\n          <input type=\"text\" placeholder=\"Windows/OSX/Linux\" id=\"os\" value={this.state.os} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Fans\n          <input type=\"text\" placeholder=\"Are they RGB?\" id=\"fan\" value={this.state.fan} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Monitor\n          <input type=\"text\" placeholder=\"Size/Resolution/Refresh Rate\" id=\"monitor\" value={this.state.monitor} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Keyboard\n          <input type=\"text\" placeholder=\"It better have good switches\" id=\"keyboard\" value={this.state.keyboard} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Mouse\n          <input type=\"text\" placeholder=\"More RGB?\" id=\"mouse\" value={this.state.mouse} onChange={this.handleChange}/>\n        </label>\n        <input type=\"submit\" value=\"share\"/>\n      </form>\n    )\n  }\n\n}\n\nexport default Form\n","import React from 'react'\nimport Build from './Build.js'\nimport Form from './Form.js'\n\nlet baseUrl = '';\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'http://localhost:8888'\n} else {\n  baseUrl = 'https://floating-reef-72531.herokuapp.com/api';\n}\n\n\nclass Main extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            builds: []\n        }\n    }\n\n    fetchBuilds = () => {\n        fetch(`${baseUrl}/builds`)\n        .then(data => data.json())\n        .then(jData => {\n            this.setState({builds:jData})\n        }).catch(err => console.log(err))\n    }\n\n\n    handleCreate = (createData) => {\n        fetch(`${baseUrl}/builds`,{\n            body:JSON.stringify(createData),\n            method: 'POST',\n            headers: {\n                'Accept': 'application.json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(createdBuild => {\n            return createdBuild.json()\n        })\n        .then(jsonedBuild => {\n            this.props.handleView('home')\n            this.setState(prevState => {\n                prevState.builds = jsonedBuild\n                return { builds: prevState.builds }\n            })\n        })\n        .catch(err => console.log(err))\n    }\n\n    handleUpdate = (updateData) => {\n        fetch(`${baseUrl}/builds/${updateData.id}`,{\n            body:JSON.stringify(updateData),\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(updatedBuild => {\n            this.props.handleView('home')\n            this.fetchBuilds()\n        })\n        .catch(err => console.log(err))\n    }\n\n    handleDelete = (id) => {\n        fetch(`${baseUrl}/builds/${id}`,{\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(json => {\n            this.setState(prevState => {\n                const builds = prevState.builds.filter(build => build.id !== id)\n                return {builds}\n            })\n        })\n        .catch(err => console.log(err))\n    }\n\n    componentDidMount(){\n        this.fetchBuilds()\n    }\n\n    render(){\n        return(\n            <main>\n            <h1> {this.props.view.pageTitle} </h1>\n\n            {\n                this.props.view.page === 'home'\n                ? this.state.builds.map((buildData) => (\n                <Build key={buildData.id}\n                    buildData={buildData}\n                    handleView = {this.props.handleView}\n                    handleDelete= {this.handleDelete} />\n                ))\n                :<Form\n                handleCreate = {this.handleCreate}\n                handleUpdate = {this.handleUpdate}\n                formInputs = {this.props.formInputs}\n                view = {this.props.view} />\n            }\n\n            </main>\n        )\n    }\n}\n\n\n\n\nexport default Main\n","import React from 'react'\n\nclass Aside extends React.Component {\n    render(){\n        return(\n            <aside>\n                <h2>Navigate</h2>\n                <h3 onClick={()=> {this.props.handleView('home')}}>Home</h3>\n                <h3 onClick={()=> {this.props.handleView('addBuild')}}>Add Build</h3>\n                <h3 onClick={()=> {this.props.handleView('aboutus')}}>About Us</h3>\n            </aside>\n        )\n    }\n}\n\nexport default Aside\n","import React from 'react'\n\nclass Header extends React.Component {\n    render(){\n        return (\n            <h1>Hello World!</h1>\n        )\n    }\n}\n\nexport default Header\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main.js';\nimport Aside from './components/Aside.js';\nimport Header from './components/Header.js'\n\nclass App extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            // builds: data,\n            // cpu: null,\n            // cpucooler: null,\n            // motherboard: null,\n            // memory: null,\n            // storage: null,\n            // videocard: null,\n            // compcase: null,\n            // powersupply: null,\n            // os: null,\n            // fan: null,\n            // monitor: null,\n            // keyboard: null,\n            // mouse: null,\n            view: {\n                page: 'home',\n                pageTitle: 'lkadsgf',\n\n            },\n            formInputs: {\n                cpu: null,\n                cpucooler: null,\n                motherboard: null,\n                memory: null,\n                storage: null,\n                videocard: null,\n                compcase: null,\n                powersupply: null,\n                os: null,\n                fan: null,\n                monitor: null,\n                keyboard: null,\n                mouse: null,\n                id: null\n            }\n        }\n    }\n\n    handleView = (view, buildData) => {\n        let pageTitle = ''\n        let formInputs = {\n            cpu: '',\n            cpucooler: '',\n            motherboard: '',\n            memory: '',\n            storage: '',\n            videocard: '',\n            compcase: '',\n            powersupply: '',\n            os: '',\n            fan: '',\n            monitor: '',\n            keyboard: '',\n            mouse: '',\n            id: null\n        }\n\n\n    switch(view){\n        case 'home':\n        pageTitle = 'Pc Builder'\n        break\n        case 'addBuild':\n        pageTitle = 'Create your PC'\n        break\n        case 'editBuild':\n        pageTitle = 'Change up your build'\n        formInputs = {\n            cpu: buildData.cpu,\n            cpucooler: buildData.cpucooler,\n            motherboard: buildData.motherboard,\n            memory: buildData.memory,\n            storage: buildData.storage,\n            videocard: buildData.videocard,\n            compcase: buildData.compcase,\n            powersupply: buildData.powersupply,\n            os: buildData.os,\n            fan: buildData.fan,\n            monitor: buildData.monitor,\n            keyboard: buildData.keyboard,\n            mouse: buildData.mouse,\n            id: buildData.id\n        }\n        break\n        default:\n        break\n    }\n    this.setState({\n        view: {\n            page: view,\n            pageTitle: pageTitle\n        },\n        formInputs: formInputs\n    })\n}\n    render(){\n        return(\n            <div className=\"large-container\">\n              <Header />\n                <div className=\"large-container\">\n                    <Aside handleView={this.handleView}/>\n                    <Main\n                    view={this.state.view}\n                    handleView = {this.handleView}\n                    formInputs = {this.state.formInputs}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}